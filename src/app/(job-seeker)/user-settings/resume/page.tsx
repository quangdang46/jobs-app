import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import DropzoneClient from "@/app/(job-seeker)/user-settings/resume/_DropzoneClient";
import React, { Suspense } from "react";
import { getCurrentUser } from "@/services/clerk/lib/getCurrentUser";
import { notFound } from "next/navigation";
import { Button } from "@/components/ui/button";
import Link from "next/link";
import { eq } from "drizzle-orm";
import { UserResumeTable } from "@/drizzle/schema";
import { cacheTag } from "next/dist/server/use-cache/cache-tag";
import { db } from "@/drizzle/db";
import { getUserResumeIdTag } from "@/features/users/db/cache/userResumes";
import MarkdownRenderer from "@/components/markdown/MarkdownRenderer";

export default function page() {
  return (
    <div className="max-w-3xl mx-auto py-8 space-y-6 px-4">
      <h1 className="text-2xl font-bold">Upload your resume</h1>
      <Card>
        <CardContent>
          <DropzoneClient />
        </CardContent>
      </Card>
      <Suspense>
        <ResumeDetails />
      </Suspense>
      <Suspense>
        <AISummaryCard />
      </Suspense>
    </div>
  );
}

async function ResumeDetails() {
  const { userId } = await getCurrentUser();

  if (!userId) {
    return notFound();
  }

  const resume = await getUserResume(userId);
  if (!resume) {
    return null;
  }

  return (
    <CardFooter>
      <Button asChild>
        <Link href={resume.resumeFileUrl} target="_blank" rel="noreferrer">
          View Resume
        </Link>
      </Button>
    </CardFooter>
  );
}

async function AISummaryCard() {
  const { userId } = await getCurrentUser();
  if (!userId) {
    return notFound();
  }

  const resume = await getUserResume(userId);
  if (!resume || !resume.aiSummary) {
    return null;
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle>AI Summary</CardTitle>
        <CardDescription>
          This is a summary of your resume generated by AI.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <MarkdownRenderer source={resume.aiSummary} />
      </CardContent>
    </Card>
  );
}

async function getUserResume(userId: string) {
  "use cache";
  cacheTag(getUserResumeIdTag(userId));

  const resume = await db.query.UserResumeTable.findFirst({
    where: eq(UserResumeTable.userId, userId),
  });
  return resume;
}
